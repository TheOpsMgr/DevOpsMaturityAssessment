[
	{
		"//" : "Copyright 2018 Atos SE and Worldline",
		"//" : "Licensed under MIT (https://github.com/atosorigin/DevOpsMaturityAssessment/blob/master/LICENSE)",
		"SectionName" : "Introduction",
		"Questions" : [
			{
				"Type" : "Banner",
				"QuestionText" : "The goal of this questionnaire is to help you assess the Operational Readiness maturity of your service and to help you understand what might be the appropriate next steps for you on your Operational Readiness journey.<br><br>These questions are intended to be completed for one team (typically reporting to the same line manager and usually consisting of between 5 and 15 people)."
			}
		]
	},
	{
		"SectionName" : "Service Levels",
		"SpiderPos" : 1,
		"Questions" : [
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Prioritise Service Levels appropriately. This helps identify how much effort to allocate for reliability of each service. This is important for microservices so teams can reliably build dependencies on your service."
			},
			{
				"Type" : "Option",
				"SubCategory" : "Service Levels",
				"QuestionText" : "Does the service have Service Level Agreements (either external or an internal commitment) e.g. contractual?",
				"Answers" : [
					{"Answer" : "Yes", "Score" : 1},
					{"Answer" : "No", "Score" : 0}
					]
			},		
			{
				"Type" : "Banner",
				"SubCategory" : "<B>INFORMATION:</B> Service Levels",
				"QuestionText" : "SLIs (Service Level Indicators). Measurable: Taken from monitoring. There should be actionable alerts if service degrades. Use shorter timeframes here, for example hourly e.g. <ul><li>Request Latency – 99% of requests per hour for a service are served within 300ms.</li><li>Failures per total number of requests – 99% of requests per hour are successfully completed</li></ul>"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Service Levels",
				"QuestionText" : "Does the service have SLIs (Service Level Indicators)?",
				"Answers" : [
					{"Answer" : "Yes, taken from monitoring, and there are actionable alerts if the service degrades", "Score" : 1},
					{"Answer" : "No", "Score" : 0}
					]
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> SLOs (Service Level Objectives), with consequences, giving common incentives across team(s). This gives early warning before SLAs are exceeded and should provide Realistic reliability goals. <br><br>Longer timeframe than SLI’s. <br><br>Define your Error Budgets & Error Budget Policy (consequences) <ul><li>Must be set at the appropriate levels</li><li>Too high and costs can rise rapidly</li><li>Smaller error budget which can impede change</li><li>Too low and your customers will be unhappy</li><ul>"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Service Levels",
				"QuestionText" : "Are there Service Level Objectives with consequences?",
				"Answers" : [
					{"Answer" : "Yes, and the consequences are effective", "Score" : 1},
					{"Answer" : "Yes, but the consequences are not always effective", "Score" : 0.5},
					{"Answer" : "No", "Score" : 0}
					]
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "Make tomorrow better than today",
				"QuestionText" : "Do key Operations staff have the skills to make tomorrow better than today (tick all that apply)?",
				"Answers" : [
						{"Answer" : "Contribution to application and infrastructure architecture", "Score" : 0.5},
						{"Answer" : "Monitoring", "Score" : 0.5},
						{"Answer" : "CI/CD Pipelines", "Score" : 0.5},
						{"Answer" : "Consulting to Developers to up-skill them / improve Operability early on", "Score" : 0.5}
					]
			},

			{
				"Type" : "Option",
				"SubCategory" : "Make tomorrow better than today",
				"QuestionText" : "Do key Operations staff have the ability to regulate Operations workload (Manual, Repetitive, Automatable, reactive, Lacks enduring value) vs Engineering (building monitoring tools for example)?",
				"Answers" : [
					{"Answer" : "Yes, Operations workloads above bounded to < 50% of Operations for key Operations staff", "Score" : 1},
					{"Answer" : "No or Other", "Score" : 0}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Make tomorrow better than today",
				"QuestionText" : "Is a shared responsibility model successfully used to handover service to Operations?",
				"Answers" : [
					{"Answer" : "Yes, you ensure an Operational Readiness Review is completed and the Platform is safe to operate before handover", "Score" : 1},
					{"Answer" : "No", "Score" : 0}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "DR",
				"QuestionText" : "Disaster Recovery plan is documented, and date of last and next DR Test noted?",
				"Answers" : [
					{"Answer" : "Yes including RTO (recovery time objective) and RPO (recovery point objective)", "Score" : 1},
					{"Answer" : "No", "Score" : 0}
					]
			}
		]
	},
	{
		"SectionName" : "Architecture Design Review",
		"SpiderPos" : 2,
		"Questions" : [
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Highly Available & Redundant"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Highly Available and Redundant",
				"QuestionText" : "Are dependencies identified and visualised? e.g. Third-party services, monitoring, networking",
				"Answers" : [
					{"Answer" : "Yes with diagrams", "Score" : 1},
					{"Answer" : "No", "Score" : 0}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Highly Available and Redundant",
				"QuestionText" : "Application Architecture: Mitigation in place for the following failure scenarios (tick all that apply)? Mitigated using relevant mitigation such as Sizing, Auto-scaling, Containers, serverless architecture etc",
				"Answers" : [
					{"Answer" : "Backend server role dies", "Score" : 0.5},
					{"Answer" : "Rack fails or cluster goes offline", "Score" : 0.5},
					{"Answer" : "Terminate or restart without affecting clients or users", "Score" : 0.5},
					{"Answer" : "Load balancing, rate-limiting, timeout, retry and error handling behaviour", "Score" : 0.5},
					{"Answer" : "Location becomes unavailable", "Score" : 0.5},
					{"Answer" : "Region becomes unavailable", "Score" : 0.5}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Highly Available and Redundant",
				"QuestionText" : "Able to handle spike of traffic? For each component, traffic volume, launch spikes.",
				"Answers" : [
					{"Answer" : "Yes e.g. using relevant mitigation such as Sizing, Auto-scaling, Containers, serverless architecture etc", "Score" : 1},
					{"Answer" : "No", "Score" : 0}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Highly Available and Redundant",
				"QuestionText" : "How will you know when you need more capacity?",
				"Answers" : [
					{"Answer" : "Automated increase, with regular Load Testing identifying capacity requirements before Production (daily/weekly)", "Score" : 1},
					{"Answer" : "Manual regular checks (monthly/quarterly)", "Score" : 0.25},
					{"Answer" : "Ad-hoc", "Score" : 0}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Highly Available and Redundant",
				"QuestionText" : "How quickly can you add more capacity?",
				"Answers" : [
					{"Answer" : "Key dependencies automate increase", "Score" : 1},
					{"Answer" : "Manual changes required, completed before impact", "Score" : 0.25},
					{"Answer" : "On occasion, capacity limits are hit", "Score" : 0}
					]
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "SPOF",
				"QuestionText" : "Does your service withstand component failures? (tick all that apply). We want to Avoid Single Points of Failure (SPOF) for key dependencies",
				"Answers" : [
					{"Answer" : "Yes with services running in clusters scaled across locations/AZs/Regions with data replication (where applicable)", "Score" : 0.5},
					{"Answer" : "Yes by monitoring of expiry dates in place for critical dependencies e.g. certificates, service accounts, access keys including platform and application", "Score" : 1},
					{"Answer" : "Yes, components can continue to serve requests in a degraded manner when dependencies are unhealthy. The component itself does not report as unhealthy. ", "Score" : 0.5},
					{"Answer" : "Yes due to loose coupling of Queuing systems, streaming systems, workflows, load balancers etc", "Score" : 1},
					{"Answer" : "Yes with graceful degradation, avoiding accidentally overrunning third-party services", "Score" : 0.5},
					{"Answer" : "Yes by playing nice with syndicated partners, mail systems, services", "Score" : 0.5}
					]
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "SPOF",
				"QuestionText" : "Application designed for the cloud? (tick all that apply). Follow these design principles to make your application more scalable, resilient, and manageable.",
				"Answers" : [
					{"Answer" : "Design for self healing. In a distributed system, failures happen. Design your application to be self healing when failures occur.", "Score" : 1},
					{"Answer" : "Make all things redundant. Build redundancy into your application, to avoid having single points of failure.", "Score" : 1},
					{"Answer" : "Minimize coordination. Minimize coordination between application services to achieve scalability.", "Score" : 1},
					{"Answer" : "Design to scale out. Design your application so that it can scale horizontally, adding or removing new instances as demand requires.", "Score" : 1},
					{"Answer" : "Partition around limits. Use partitioning to work around database, network, and compute limits.", "Score" : 1},
					{"Answer" : "Design for operations. Design your application so that the operations team has the tools they need.", "Score" : 1},
					{"Answer" : "Use managed services. When possible, use platform as a service (PaaS) rather than infrastructure as a service (IaaS).", "Score" : 1},
					{"Answer" : "Use the best data store for the job. Pick the storage technology that is the best fit for your data and how it will be used.", "Score" : 1},
					{"Answer" : "Design for evolution. All successful applications change over time. An evolutionary design is key for continuous innovation.", "Score" : 1},
					{"Answer" : "Build for the needs of business. Every design decision must be justified by a business requirement.", "Score" : 1}
					]
			},

			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> On-boarding new developers"
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "On-boarding staff",
				"QuestionText" : "Do you effectively ensure staff reacting to incidents are skilled to troubleshoot all the tech stack? (tick all that apply)",
				"Answers" : [
					{"Answer" : "Standardise on libraries, languages for easier developer onboarding and Production troubleshooting", "Score" : 0.5},
					{"Answer" : "Spot duplicate code and refactor", "Score" : 0.5},
					{"Answer" : "Look for opportunities to implement good design patterns", "Score" : 1},
					{"Answer" : "Know your licenses - Open Source Permissive (MIT/Apache) vs Copy Left (GNU/MPL) etc", "Score" : 0.25}
					]
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Security Best Practice Review"
			},
			
			{
				"Type" : "Checkbox",
				"SubCategory" : "Security",
				"QuestionText" : "Is Security always a top priority? e.g. all of the following as a minimum? (tick all that apply)",
				"Answers" : [
					{"Answer" : "Ensure no credentials stored in app", "Score" : 0.5},
					{"Answer" : "Code defensively for OWASP e.g. SQL injections, XSS attacks etc", "Score" : 0.5},
					{"Answer" : "Leverage Static Analysis Tools", "Score" : 0.5},
					{"Answer" : "Code check-in validation", "Score" : 0.5}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Security",
				"QuestionText" : "Meeting industry best practice regarding security of service and platform?",
				"Answers" : [
					{"Answer" : "All regulations complied with", "Score" : 1},
					{"Answer" : "Unsure or not demonstrated regulations are complied with", "Score" : 0}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Security",
				"QuestionText" : "Penetration Testing passed (if required)?"			
			},
			{
				"Type" : "Option",
				"SubCategory" : "Security",
				"QuestionText" : "Secret / Key Management reviewed and auditable as effective and compliant?"			
			},
			{
				"Type" : "Option",
				"SubCategory" : "Security",
				"QuestionText" : "System Administrator Authentication reviewed and auditable as effective and compliant?"			
			},
			{
				"Type" : "Banner",
				"SubCategory" : "Security",
				"QuestionText" : "<B>INFORMATION:</B> Continuous Improvement: Obtain Peer Review / Fresh eyes. Use Kaizen (small, ongoing positive improvements of working practices). Consider rotating developers off projects every few months to gain fresh eyes on projects. This is easier when pushing small batches."
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "Security",
				"QuestionText" : "Continuous Improvement of the following?",
				"Answers" : [
					{"Answer" : "Code - via Peer Review", "Score" : 1},
					{"Answer" : "Architecture", "Score" : 0.5},
					{"Answer" : "Interviewing", "Score" : 0.25}
					]
			}
		]
	},
	{
		"SectionName" : "Performance",
		"SpiderPos" :3,
		"Questions" : [
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Run Load Tests & Understand Limits"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Before a service goes live, you know where your breaking points are?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "You know the bare minimum number of instances needed to run your average throughput?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "You know maximum throughput you can handle with current architecture?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "You calculate throughput per instance ratio (scale unit) so you can accurately setup proper auto-scaling in a cost optimised way?"
			}
		]
	}
	,
	{
		"SectionName" : "Documentation",
		"SpiderPos" : 4,
		"Questions" : [
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Documentation for your App and Platform"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Stored your documentation close to your code e.g. Readme in code and links to wiki / alternative, including how to install, troubleshoot?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "What does the code do?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "How to install & run it?"
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Documentation - Standard Operating Procedures"
			},
			{
				"Type" : "Option",
				"QuestionText" : "How to interact with it (stop, start, restart)?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "How to configure it?"
			},
			{
				"Type" : "Checkbox",
				"QuestionText" : "How to troubleshoot it?",
				"Answers" : [
					{"Answer" : "Standard Operating Procedures", "Score" : 0.5},
					{"Answer" : "Application Run Books - Set actions (documentation) for resolving issues", "Score" : 0.5},
					{"Answer" : "Application Run Books - Set actions (automated) for resolving issues", "Score" : 0.5},
					{"Answer" : "Application Run Books - Out of hours scenarios", "Score" : 0.5}
					]
			},
			{
				"Type" : "Option",
				"QuestionText" : "Metrics and Dashboards are available for Application and Platform?"
			}
		]
	},
	{
		"SectionName" : "Observability",
		"SpiderPos" : 5,
		"Questions" : [

			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Monitoring - Insight"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Insight",
				"QuestionText" : "Visualisations - how do you know what's going on. Dashboards show the right things that may go wrong?"			
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Insight",
				"QuestionText" : "Dashboard health - viable dashboard? (false positives low)"			
			},		
			{
				"Type" : "Checkbox",
				"SubCategory" : "Monitoring - Insight",
				"QuestionText" : "In Prod & Non-Production environments with same tools, Ensure Developers are (tick all that apply)?",
				"Answers" : [
					{"Answer" : "Able to build Dashboards", "Score" : 0.25},
					{"Answer" : "Building Dashboards", "Score" : 0.25},
					{"Answer" : "Providing Operations with early insight into what is coming to Prod", "Score" : 0.25},
					{"Answer" : "Also - close Feedback loops: Operations staff able to let Devs see how their software operates (ceremonies / information radiators)", "Score" : 0.25}
					]
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Monitoring - Customer"
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "Monitoring - Customer",
				"QuestionText" : "Analytics / Read User Monitoring (RUM): Customer focused monitoring?  Understand how customers use software / where they fall out of process / where they get frustrated",
				"Answers" : [
					{"Answer" : "Tools in place", "Score" : 0.25},
					{"Answer" : "Metrics monitored have adequate coverage", "Score" : 0.25},
					{"Answer" : "Using percentiles to expose where users are experiencing issues (averages hide issues) e.g. have alarms for: 99, 90, 75, vs steady state e.g. mean, median as relevant?", "Score" : 0.25},
					{"Answer" : "Close Feedback loops: Operations staff able to let Devs see how their software operates (ceremonies / information radiators)", "Score" : 0.25},
					{"Answer" : "Real User Monitoring (RUM) active - e.g. javascript in browser reporting real user experience e.g. includes page load times, DNS issues, traffic bottlenecks etc", "Score" : 0.25}
				]
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Monitoring - Code"
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "Monitoring - Code",
				"QuestionText" : "STM (Synthetic Transaction Monitoring) / APM (Application Performance Monitoring) / Log Analytics (tick all that apply)?",
				"Answers" : [
					{"Answer" : "Tools in place", "Score" : 0.25},
					{"Answer" : "Metrics monitored have adequate coverage", "Score" : 0.25},
					{"Answer" : "Synthetic Monitoring - Automated testing to measure performance?", "Score" : 0.25},
					{"Answer" : "Visibility into how app is performing internally e.g. how long are certain relevant calls to resources taking?", "Score" : 0.25},
					{"Answer" : "Metrics trending up or down visible and alerted where critical?", "Score" : 0.25},
					{"Answer" : "The tools indicate what part of the app is generating the highest number of errors?", "Score" : 0.25}
				]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Code",
				"QuestionText" : "Effective error and performance logging (instrumentation) is built into the application, noting needs above?"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Code",
				"QuestionText" : "Continuously improve: Learn from the service under inspection - Each service has a 'heartbeat' that appears off when unhealthy?"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Code",
				"QuestionText" : "Database: DBA monitoring proactive in identifying issues before they become impacting incidents?"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Code",
				"QuestionText" : "Configuration 'Drift Management' in place?"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Core",
				"QuestionText" : "Effective Service and Infrastructure monitoring in place?"
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Monitoring - Security"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Monitoring - Security",
				"QuestionText" : "Governance - Monitoring effective for Auditing and Compliance, including Threat Detection?"
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Monitoring - Team / access"
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "Monitoring - Team",
				"QuestionText" : "Teams access to each of the above monitoring (tick all that apply)?",
				"Answers" : [
					{"Answer" : "Insight", "Score" : 0.5},
					{"Answer" : "Customer ", "Score" : 0.5},
					{"Answer" : "Code", "Score" : 0.5},
					{"Answer" : "Core", "Score" : 0.5},
					{"Answer" : "Security", "Score" : 0.5}
					]
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Logging"
			},	
			{
				"Type" : "Option",
				"SubCategory" : "Logging",
				"QuestionText" : "Consistent Log Format? Consider JSON"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Logging",
				"QuestionText" : "Log levels: User Log Levels correctly [INFO/WARN/CRIT] inc UTC & microseconds? "
			},
			{
				"Type" : "Option",
				"SubCategory" : "Logging",
				"QuestionText" : "Add context for your logging? e.g. transaction / correlation ids"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Logging",
				"QuestionText" : "Service (and other sources of logs) is periodically reviewed to consider how analytics will be used on this data?"
			},
			{
				"Type" : "Banner",
				"QuestionText" : "<B>INFORMATION:</B> Alerting"
			},	
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
	     		"QuestionText" : "Can you have someone else manage hosting your alerting? Non-core, leverage 3rd party managed service if possible"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "Alerts calibrated correctly for service - not too chatty? For example, if can auto-recover e.g. VM restarting, then do not alert (but do notify for later review)"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "Auto-scaling alert avoidance - avoiding alerts from high CPU/Memory if auto-scaling (where by design)?"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "Out of hours Alerts calibrated correctly e.g. alert requires fix now and is Actionable? Avoiding getting people out of bed unless required"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "Tickets created for relevant alerts? - Implemented auto-ticket creation where relevant - including non-urgent actions?"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "Build Proper Escalation Paths For Alerts? e.g. tools with built in capability (PagerDuty etc), Primary => Secondary => Team => Management"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "P1 paging escalations e.g. P1 Auto escalate where not Acknowledged?"
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "Review alerts/acknowledgements - Review alerts periodically that have been acknowledged or silenced beyond a tolerable threshold?"
			},
			{
				"Type" : "Checkbox",
				"SubCategory" : "Alerting",
				"QuestionText" : "Alerting in place for:",
				"Answers": [
					{"Answer" : "Infrastructure ", "Score" : 1},
					{"Answer" : "Application ", "Score" : 1},
					{"Answer" : "Database", "Score" : 0.5},
					{"Answer" : "Security", "Score" : 1},
					{"Answer" : "Network", "Score" : 0.5}
					]
			},
			{
				"Type" : "Option",
				"SubCategory" : "Alerting",
				"QuestionText" : "Team(s) responsible for each of the above clearly identified and responsible?"
			}

		]
	},
	
	{
		"SectionName" : "Testing",
		"SpiderPos" : 6,
		"Questions" : [
			{
				"Type" : "Option",
				"QuestionText" : "Adopted Automated Testing early? e.g. Test Driven Development (TDD): Build a Test first, fails. Develop code to is passes. Refactor/optimise code. Repeat. <ul><li><div>Builds confidence in code released</div></li><li><div>Allowed more testing of app in less time</div></li><li><div>Manual testing can become error prone</div></li></ul>"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Can you confirm the level of test coverage/code coverage? e.g. how much of solution been tested? Noting the number is very much context dependent",
				"Answers": [
					{"Answer" : "70% or more", "Score" : 1},
					{"Answer" : "20%-69%", "Score" : 1},
					{"Answer" : "< 20%", "Score" : 0.75},
					{"Answer" : "Not measured", "Score" : 0}
					]
			},
			{
				"Type" : "Option",
				"QuestionText" : "Have you automated common testing tasks & integrated into build process?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Integrated UI tests automation?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Can you confirm how many critical or high-priority bugs are still open - prior to release? (Watch out for the 're-prioritising bug severity downwards' trick in order to meet the quality goals!)?"
			}
		]
	}
	,
	{
		"SectionName" : "Deployment Strategy",
		"SpiderPos" : 7,
		"Questions" : [
			{
				"Type" : "Option",
				"QuestionText" : "Artifact repository tool in use?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Automated application deployment (consider how fast to deploy, and roll back)?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Outage required for changes?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Platform Deployment tools / process confirmed?"
			},
			{
				"Type" : "Option",
				"QuestionText" : "Automated database deployment?"
			},
			{
				"Type" : "Checkbox",
				"QuestionText" : "Understand what changes to the database are needed to support new code releases (check all that apply)?",
				"Answers" : [
					{"Answer" : "Avoid removing columns/changing type of columns, only made additions to reduce risk", "Score" : 0.5},
					{"Answer" : "Test migrations against test copies of database", "Score" : 1},
					{"Answer" : "Keep revision history of database migrations for reference", "Score" : 0.5},
					{"Answer" : "Snapshot databases before doing migrations", "Score" : 1}
					]
			},
			{
				"Type" : "Checkbox",
				"QuestionText" : "Speed up and reduce risk for deployments / experiments (check all that apply)?",
				"Answers" : [
					{"Answer" : "Canary Pools e.g. direct % of traffic to new version of app, then increase % gradually", "Score" : 0.5},
					{"Answer" : "Blue/Green deployments (switch from one to the other)", "Score" : 1}
					]
			},
			{
				"Type" : "Checkbox",
				"QuestionText" : "Able to use Dark Deploys & Feature Flags (check all that apply)?",
				"Answers" : [
					{"Answer" : "Using 3rd party Feature Flag solution?", "Score" : 0.5},
					{"Answer" : "Opt In - Test new features with selected users?", "Score" : 0.5},
					{"Answer" : "Kill Switch - Disable poorly performing features?", "Score" : 0.5},
					{"Answer" : "Scalable Roll Outs - Do % roll outs of new features?", "Score" : 1},
					{"Answer" : "Block Users - Prevent selected users from features?", "Score" : 0.5}
					]
			},
			{
				"Type" : "Checkbox",
				"QuestionText" : "Test and compare new features / Continuous usability and user experience testing?",
				"Answers" : [
					{"Answer" : "Run A/B Tests?", "Score" : 0.5},
					{"Answer" : "Sunset Old Features - Safely decommission old features?", "Score" : 0.5}
					]
			}
		]
	}
]	